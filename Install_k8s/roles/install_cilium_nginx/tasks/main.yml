- name: Add repo cilium
  kubernetes.core.helm_repository:
    name: cilium
    repo_url: "https://helm.cilium.io"

- name: Install cilium
  kubernetes.core.helm_repository:
    name: cilium
    repo_url: "https://helm.cilium.io"
    chart_ref: cilium/cilium
    release_namespace: kube-system
    create_namespace: true
    values:
      kubeProxyReplacement: strict
      k8sServiceHost: 192.168.1.110
      k8sServicePort: true
      prometheus.enabled: true
      operator.prometheus.enabled: true
      hubble.metrics.enabled: "{dns,drop,tcp,flow,icmp,http}"

- name: Download prometheus manifest to the cluster
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/cilium/cilium/v1.12/examples/kubernetes/addons/prometheus/monitoring-example.yaml
    dest: ~/monitoring-example.yaml
    mode: '0664'

- name: Apply prometheus manifest to the cluster
  kubernetes.core.k8s:
    state: present
    src: ~/monitoring-example.yaml

- name:  Expose grafana 
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.command: /
  kubectl -n cilium-monitoring port-forward service/grafana --address 0.0.0.0 --address :: 3000:3000
  changed_when: false

echo "........................Cilium_CLI........................"
CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/master/stable.txt)
CLI_ARCH=amd64
if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}

cilium install

echo "........................Nginx-ingress........................"
helm upgrade --install ingress-nginx ingress-nginx \
    --repo https://kubernetes.github.io/ingress-nginx \
    --namespace ingress-nginx --create-namespace \
    --set controller.hostNetwork=true \
    --set controller.hostPort.enabled=true \
    --set controller.kind=DaemonSet \
    --set controller.service.type=ClusterIP
