- hosts: "masters, workers"
  remote_user: ubuntu
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh

  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 #One day

    - name: Add nodes to host_file
      blockinfile:
        dest: /etc/hosts
        block: |
          "{{ nodes[0] }}"
          "{{ nodes[1] }}"
          "{{ nodes[2] }}"

    - name: Disable swap
      shell: |
        sudo swapoff -a
        sudo sed -i '/swap/s/^/#\ /' /etc/fstab

    - name: Install containerd
      shell: |
        wget https://github.com/containerd/containerd/releases/download/v1.6.8/containerd-1.6.8-linux-amd64.tar.gz
        tar Cxzvf /usr/local containerd-1.6.8-linux-amd64.tar.gz
      args:
        chdir: /tmp/

    - name: Install containerd service
      shell: |
        wget https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
        cp containerd.service /etc/systemd/system $$$$$$$!@$!#$!#$!$!#$!#$!@#!@$
      args:
        chdir: /tmp/
   
    - name: Copies containerd.service
      copy:
        src: /tmp/containerd.service 
        dest: /etc/systemd/system
        remote_src: yes
        owner: kube

    - name: Install Runc
      shell: |
        wget https://github.com/opencontainers/runc/releases/download/v1.1.4/runc.amd64
        install -m 755 runc.amd64 /usr/local/sbin/runc
      args:
        chdir: /tmp/

    - name: Install cni plugins
      shell: |
        wget https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
        mkdir -p /opt/cni/bin
        tar Cxzvf /opt/cni/bin cni-plugins-linux-amd64-v1.1.1.tgz
      args:
        chdir: /tmp/

    - name: Add conf for containerd
      blockinfile:
        path: "/etc/modules-load.d/containerd.conf"
        block: |
          overlay
          br_netfilter

    - name: Modprobe
      shell: |
        sudo modprobe overlay
        sudo modprobe br_netfilter

    - name: Add conf for cri
      blockinfile:
        path: "/etc/sysctl.d/99-kubernetes-cri.conf"
        block: |
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - name: Apply new settings
      command: sudo sysctl --system

    - name: Create containerd config file
      file:
        path: "/etc/containerd/config.toml"
        state: "touch"

    - name: Config containerd
      shell: |
        containerd config default>/etc/containerd/config.toml
        sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: Restart and enable containerd
      shell: |
        systemctl daemon-reload
        systemctl restart containerd
        systemctl enable --now containerd

    - name: Install dependencies
      apt: name={{ item }} update_cache=yes state=latest
      loop:
        - "curl"
        - "wget"
        - "apt-transport-https"

#   curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

    - name: Add K8s Source
      blockinfile:
        path: "/etc/apt/sources.list.d/kubernetes.list"
        block: |
          deb https://apt.kubernetes.io/ kubernetes-xenial main


    - name: Install dependencies
      apt: name={{ item }} update_cache=yes state=latest
      loop:
        - "kubelet"
        - "kubeadm"
        - "kubectl"
      
#    sudo apt-mark hold kubelet kubeadm kubectl

    - name: Enable kubelet
      shell: |
        systemctl enable --now kubelet







