- hosts: "masters, workers"
  remote_user: pi
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
 
  tasks:
    - name: Update and upgrade apt packages.
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 # One day

    - name: Add nodes to host_file.
      blockinfile:
        dest: /etc/hosts
        block: |
          "{{ nodes[0] }}"
          "{{ nodes[1] }}"
          "{{ nodes[2] }}"

    - name: Remove Swap entry from /etc/fstab.
      lineinfile:
        dest: /etc/fstab
        regexp: swap
        state: absent

    - name: Install containerd.
      unarchive:
        src: https://github.com/containerd/containerd/releases/download/v1.6.8/containerd-1.6.8-linux-amd64.tar.gz
        dest: /usr/local/
        remote_src: yes

    - name: Install containerd.service.
      url: https://raw.githubusercontent.com/containerd/containerd/main/containerd.service 
        dest: /etc/systemd/system 
        owner: "{{ ansible_user }}"

    - name: Download Runc.
      url: wget https://github.com/opencontainers/runc/releases/download/v1.1.4/runc.amd64
        dest: /tmp/

    - name: Install Runc.
      shell: install -m 755 runc.amd64 /usr/local/sbin/runc
      args:
        chdir: /tmp/

    - name: Install cni plugins.
      unarchive:
        src: https://github.com/containernetworking/plugins/releases/download/v1.1.1/cni-plugins-linux-amd64-v1.1.1.tgz
        dest: /opt/cni/bin/
        creates: /opt/cni/bin/
        remote_src: yes
   
    - name: Add conf for containerd.
      blockinfile:
        path: /etc/modules-load.d/containerd.conf
        block: |
          overlay
          br_netfilter

    - name: Modprobe.
      shell: |
        sudo modprobe overlay
        sudo modprobe br_netfilter

    - name: Create a empty file for kubernetes sysctl params.
      copy:
        content: ""
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        force: no
  
    - name: Add conf for cri.
      lineinfile:
        path: /etc/sysctl.d/99-kubernetes-cri.conf 
        line: "{{ item }}"
      with_items:
        - 'net.bridge.bridge-nf-call-iptables  = 1'
        - 'net.ipv4.ip_forward                 = 1'
        - 'net.bridge.bridge-nf-call-ip6tables = 1'

    - name: Apply sysctl params without reboot.
      command: sysctl --system

    - name: Create containerd config file.
      file:
        path: "/etc/containerd/config.toml"
        state: "touch"

    - name: Config containerd.
      shell: |
        containerd config default>/etc/containerd/config.toml
        sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: Restart and enable containerd.
      shell: |
        systemctl daemon-reload
        systemctl restart containerd
        systemctl enable --now containerd

    - name: Install dependencies.
      apt: 
        update_cache: yes
        state: latest
        pkg:
        - curl
        - wget
        - apt-transport-https
      state: present

    - name: Add an Apt signing key for kubelet, kubeadm, kubectl.
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add K8s Source.
      blockinfile:
        path: "/etc/apt/sources.list.d/kubernetes.list"
        block: |
          deb https://apt.kubernetes.io/ kubernetes-xenial main

    - name: Install kubelet, kubeadm, kubectl.
      apt: 
        update_cache: yes
        state: latest
        name:
        - kubelet
        - kubeadm
        - kubectl
      state: present
     
    - name: Hold kubelet, kubeadm, kubectl.
      dpkg_selections:
        selection: hold
        name:
        - kubelet
        - kubeadm
        - kubectl

    - name: Enable kubelet.
      systemd:
        name: kubelet
        enabled: yes

    - name: Reboot all the kubernetes nodes.
      reboot:
        post_reboot_delay: 10
        reboot_timeout: 40
        connect_timeout: 60
        test_command: uptime
